# -*- coding: utf-8 -*-
"""
Created on Thu Jun 13 02:45:00 2024

@author: Nikola Anđelić
"""

import numpy as np 
import pandas as pd 
import matplotlib.pyplot as plt 
import seaborn as sns 
# redosljed
# 1. ADASYN K = 2
# 2. BorderlineSMOTE K = 3
# 3. KMeansSMOTE k = 3
# 4. SMOTE K = 3
# 5. SVMSMOTE K= 1



MeanACC =[0.9404032110449541,
    0.9423142325633413,
    0.9525585335477855,
    0.9402204398805899,
    0.9444730616897391
    ]


StdACC =[0.0014726055801768667,
    0.000688546242023802,
    0.00022066452574359685,
    0.0008395216025601782,
    0.003136227123016755
    
    
    ]



MeanAUC =[0.9404475202684954, 
    0.9424411512320161,
    0.9523577324417409,
    0.9401786781772521,
    0.9447204303043384
    
    ]


StdAUC =[0.0013949303478441588,
    0.00044957749650631484,
    0.0004476655277940722,
    0.0008705406916204028,
    0.002953180595470062
    ]


MeanPrecision =[0.9431101053510271,
    0.9465414115674432,
    0.9594942620422247,
    0.94047455387206,
    0.9521928198611276
    ]
StdPrecision =[0.0015410166931554836,
        0.0011515213836816862,       
    0.0005576505681211263,
    0.00046025237505764593,
    0.004165027338756566
    ]

MeanRecall =[0.942128486447765,
             0.9365504961588647,
           0.9448849354311111,
           0.9417550934525005,
           0.9374505142274627
    
    ]
StdRecall =[0.0013160395236621047,
           8.64483639529956e-05, 
            0.001422184323335074,
            0.0014786764366689908,
            0.001983314511801615
    
    ]


MeanF1Score =[0.9424491669072501,
              0.9412143130434287,
              0.9519646282563938,
              0.9405015135383483,
             0.9445347883558983 
    
    ]

StdF1Score =[0.0014549324514730455,
             0.0005556280212374864,
             0.0005552073227817478,
             0.0007908539607179299,
             0.0031573049284069343
    
    
    ]
names = ["ADASYN", 
         "Borderline\nSMOTE",
         "KMeans\nSMOTE",
         "SMOTE",
         "SVM\nSMOTE"]
colors = ["#FF0000","#FF00FF","#0000FF","#0050FF","#800080"]
plt.rcParams["font.family"] = "Times New Roman"
SMALL_SIZE = 20
MEDIUM_SIZE = 24
BIGGER_SIZE = 28

plt.rc('font', size=SMALL_SIZE)          # controls default text sizes
plt.rc('axes', titlesize=SMALL_SIZE)     # fontsize of the axes title
plt.rc('axes', labelsize=MEDIUM_SIZE)    # fontsize of the x and y labels
plt.rc('xtick', labelsize=SMALL_SIZE)    # fontsize of the tick labels
plt.rc('ytick', labelsize=SMALL_SIZE)    # fontsize of the tick labels
plt.rc('legend', fontsize=SMALL_SIZE)    # legend fontsize
plt.rc('figure', titlesize=BIGGER_SIZE)  # fontsize of the figure title
X = [i for i in range(len(MeanACC))]
plt.figure(figsize=(8,16))
plt.subplot(5,1,1)
plt.bar(X,MeanACC, yerr=StdACC,color = colors, capsize=20, ecolor='black',zorder=3)
plt.xticks(X,[])
plt.ylim(0.9,1)
plt.ylabel("$\overline{ACC}$")
plt.grid(True, zorder=0)

plt.subplot(5,1,2)
plt.bar(X,MeanAUC, yerr=StdAUC,color = colors, capsize=20, ecolor='black',zorder=3)
plt.xticks(X,[])
plt.ylim(0.9,1)
plt.ylabel("$\overline{AUC}$")
plt.grid(True, zorder=0)

plt.subplot(5,1,3)
plt.bar(X,MeanPrecision, yerr=StdPrecision,color = colors, capsize=20, ecolor='black',zorder=3)
plt.xticks(X,[])
plt.ylim(0.9,1)
plt.ylabel("$\overline{Precision}$")
plt.grid(True, zorder=0)

plt.subplot(5,1,4)
plt.bar(X,MeanRecall, yerr=StdRecall,color = colors, capsize=20, ecolor='black',zorder=3)
plt.xticks(X,[])
plt.ylim(0.9,1)
plt.ylabel("$\overline{Recall}$")
plt.grid(True, zorder=0)

plt.subplot(5,1,5)
plt.bar(X,MeanF1Score, yerr=StdF1Score,color = colors, capsize=20, ecolor='black',zorder=3)
plt.xticks(X,names, rotation=90)
plt.ylim(0.9,1)
plt.ylabel("$\overline{F1-Score}$")
plt.grid(True, zorder=0)
plt.xlabel("Balanced dataset variations")
# plt.show()
plt.savefig("AMD_SE_Perf.png",
            dpi = 300,
            bbox_inches="tight")



